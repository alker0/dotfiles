{{- $is_alpine := (index .chezmoi "osRelease" | default (dict "id" "")).id | eq "alpine" }}

{{- $shell_list := list }}
{{- $valid_shell_list := list "bash" "zsh" "dash" "ash" "ksh" "csh" "tcsh" "fish" "elvish" }}
{{- $default_shell_text := "" }}
{{- $printf_format := "%s%s" }}
{{- range $valid_shell := $valid_shell_list }}
{{-   if lookPath $valid_shell }}
{{-     $default_shell_text = printf $printf_format $default_shell_text $valid_shell }}
{{-     $printf_format = "%s:%s" }}
{{-   end }}
{{- end}}
{{- $shell_list_prompt := printf "A list of all shell you will use (e.g. 'bash:zsh', default: %s)" $default_shell_text }}
{{- range $shell_list_elm := (regexSplit
    "\\s*:\\s*"
    (promptString $shell_list_prompt | default $default_shell_text)
    -1)
}}
  {{- $shell_list = $valid_shell_list
    | has $shell_list_elm
    | ternary (append $shell_list (quote $shell_list_elm)) $shell_list
  }}
{{- end }}

{{- $main_editor := index . "main_editor" }}
{{- if not (empty $main_editor) }}
{{-   if empty (lookPath $main_editor) }}
{{-     $main_editor = "" }}
{{-   end }}
{{- end }}
{{- if empty $main_editor }}
{{-   $main_editor_prompt := "What is your main editor? (default is vi)" }}
{{-   $main_editor = (promptString $main_editor_prompt | default "vi" | replace "vscode" "code") }}
{{- end }}

{{- $exists_vim := not (empty (lookPath "vim")) }}
{{- $use_vim_previous := index . "use_vim" }}
{{- $use_vim := $use_vim_previous }}
{{- if ne $exists_vim $use_vim_previous }}
{{-   $use_vim_default := $use_vim_previous }}
{{-   $use_vim = promptBool . "use_vim" "Will you use vim?" $exists_vim }}
{{- end }}

{{- $default_diff := (
    $use_vim | ternary "vimdiff" ($main_editor | eq "code" | ternary "code-diff" "")
  )
}}

{{- $default_merge := (
    $use_vim | ternary "vimdiff" ($main_editor | eq "code" | ternary "code-merge" "normal-merge")
  )
}}

{{- if $use_vim }}
[edit]
hardlink = false
{{- end }}

[data]
  shell_list = {{ $shell_list | uniq | join ", " | printf "[%s]" }}
  main_editor = "{{ $main_editor }}"
  use_vim = {{ $use_vim }}
  is_win_bash = {{ .chezmoi.os | eq "windows" | and ($shell_list | has "bash") }}

{{- $git_editor := $main_editor | replace "code" "code --reuse-window --wait" }}
{{- $git_email_default := "xxx@example.com" }}
{{- $git_email_prompt := printf "Your email for git? (default is %s)" $git_email_default }}
{{- $git_email := (promptString $git_email_prompt | default $git_email_default) }}
{{- $git_name_default := "alker0" }}
{{- $git_name_prompt := printf "Your name for git? (default is %s)" $git_name_default }}
{{- $git_name := (promptString $git_name_prompt | default $git_name_default) }}
{{- $default_use_gpg := not (empty (lookPath "gpg")) }}

{{- $bw_logged_in := not (empty (env "BW_SESSION")) }}
{{- if not $bw_logged_in }}
{{-   if lookPath "bw" }}
{{-     $bw_logged_in = not (output "bw" "status" | contains "\"unauthenticated\"") }}
{{-   end }}
{{- end }}

{{- $bw_email_default := "xxx@example.com" }}
{{- $bw_email_prompt := printf "Your email for bitwarden? (default is %s)" $bw_email_default }}
{{- $bw_email := (promptString $bw_email_prompt | default $bw_email_default) }}

[data.bash]
histignore = [
  'xl',
]

[data.git]
  editor = "{{ $git_editor }}"
  email = "{{ $git_email }}"
  name = "{{ $git_name }}"
  default_diff = "{{ $default_diff }}"
  default_merge = "{{ $default_merge }}"
  gpg_sign = {{ $default_use_gpg }}
{{- if $default_use_gpg }}
  signingkey = "{{- if $bw_logged_in -}}
  {{- (bitwardenFields "item" "GitHub").default_signing_key_id.value -}}
  {{- end -}}"
{{- end }}

{{- $prev_vim := index . "vim" | default (dict) }}

[data.vim]
use_win32yank = {{ not (empty (lookPath "win32yank.exe")) }}
dein_token = '{{- if $bw_available -}}
{{-   (bitwardenFields "item" "GitHub").dein_vim_token.value -}}
{{- end -}}'
chezmoi_plugin_path = '{{ index $prev_vim "chezmoi_plugin_path" }}'

[data.vim.chezmoi_plugin_options]
{{- with index $prev_vim "chezmoi_plugin_options" }}
{{-   range $key,$value := . }}
{{ $key }} = {{ if $value | kindIs "string"}}'{{ $value }}'{{ else }}{{ $value }}{{ end }}
{{-   end }}
{{- else }}
#source_path = ''
{{- end }}

{{- $placeholder_default_exclude := printf "#%s\n" "default_exclude = []" }}
{{- $placeholder_additional_lines := list
    "[[data.vim.plugins.additional]]"
    "repo = \"owner/repo\""
}}
{{- $placeholder_additional := printf "#%s\n" ($placeholder_additional_lines | join "\n#") }}

[data.vim.plugins]
{{- with index $prev_vim "plugins" | default (dict) }}
{{-   with index . "default_exclude" }}
default_exclude = {{ toToml . }}
{{-   else }}
{{  $placeholder_default_exclude }}
{{-   end }}
{{-   with index . "additional" }}
{{      regexReplaceAllLiteral "(?m)^\\[{2}" (dict "additional" . | toToml) "[[data.vim.plugins." }}
{{-   else }}
{{- $placeholder_additional }}
{{-   end }}
{{- else }}
{{  $placeholder_default_exclude }}
{{  $placeholder_additional }}
{{- end }}

{{- "" -}}

[data.bw]
email = '{{ $bw_email }}'
