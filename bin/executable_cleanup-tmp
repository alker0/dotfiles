#!/bin/sh

'ls' -A1 /tmp | 'grep' -E "^($(printf '|%s' $(cat <<'EOF'
bash_alias_completion
chezmoi-edit-*
chrootenv
core-js-banners
dart-code-startup-log-.*
flutter_tools\..*
hsperfdata_*
kotlin-.*
native-platform
nix-.*
npm-.*
phantomjs
pip-uninstall-*
pyright-.*
python-languageserver
tmp.*.pem
v8-compile-cache-.*
vim-.*
xfs-.*
yarn--.*
EOF
)
))$" | xargs sh -c "$(cat <<'EOF'
if [ "$#" -ne 0 ]; then
  rm -rf $(printf ' /tmp/%s' "$@")
fi
EOF
)" _


'ls' -A1 /tmp | 'grep' -vE "^($(printf '|%s' $(cat <<'EOF'
\.X11-unix
remote-wsl-.*
graveyard-.*
fnm_multishells
vscode-.*
EOF
)
))$" | xargs -L10 --open-tty sh -c "$(cat <<'EOF'
if [ "$#" -eq 0 ]; then
  return
fi

echo "Remove these in /tmp [fF(orce)/yY(es)/nN(o)/qQ(uit)]? $(printf '\n%s' "$@")"
read -r REPLY
case "$REPLY" in
  ''|[fF]|[fF]orce)
    find "/tmp/$@" -maxdepth 0 \(-user "$UID" -o -perm -002 $(printf ' -o -group %s' $(id --groups)) \) \
      -exec rm -rf {}+
    for i in $(seq $#); do
      target="$1"
      # if [ -e "$target" ] && [ "_$(stat -c '%u' "$target")" = "_0"  ]; then
      if [ -e "$target" ]; then
        set -- "$@" "$1"
      fi
      shift
    done
    find "/tmp/" -mindepth 1 -maxdepth 1 \( -user 0 -o \( -group 0 -perm -020 \) \) \
      -exec sudo rm -ir {}+
    ;;
  ''|[yY]|[yY]es)
    rm -rf $(printf ' /tmp/%s' "$@")
    ;;
  [nN]|[nN]o)
    return
    ;;
  [qQ]|[qQ]uit)
    exit 255
    ;;
esac
EOF
)" _

for tmp_name in ipc- git- typescript- distro-env ; do
  'ls' -A1t /tmp | 'grep' -E "^vscode-${tmp_name}" | tail -n +2 | xargs --open-tty sh -c "$(cat <<'EOF'
if [ "$#" -ne 0 ]; then
  rm -r $(printf ' /tmp/%s' "$@")
fi
EOF
  )" _
done

if [ -d /tmp/fnm_multishells ]; then
  'ls' -A1t /tmp/fnm_multishells/ | tail -n +2 | xargs sh -c "$(cat <<'EOF'
if [ "$#" -ne 0 ]; then
  rm -r $(printf ' /tmp/fnm_multishells/%s' "$@")
fi
EOF
  )" _
fi

