{{ template "aliases/aliases" (dict "shell" "bash" "data" .data) }}

fenv() {
  (
    if [ -f "${FENV_EXCLUDES_PATH:=${XDG_CONIFG_HOME:-$HOME/.config}/fenv/fenv-excludes}" ]; then
      fenv_excludes="$(cat < "${FENV_EXCLUDES_PATH}" | tr -s '\n' | tr '\n' '|')"

      fenv_sed_pattern="$(cat <<EOP
      /[:]{2}|[CD]:[\\]|[CD]:$/b
      s/=([^:]+):/=*\n--------\1\n--------/
      s/:/\n--------/g
EOP
      )"

      env \
        | command grep -E -v "^(${fenv_excludes})=" \
        | sort \
        | sed -r "${fenv_sed_pattern}"
    else
      echo "${FENV_EXCLUDES_PATH} is missing or invalid"
      return 1
    fi
  )
}

unqh() {
  # inspect -> type unqh
  # delete -> unset -f unqh
  # list -> set | less
  history -a \
    && (
      reverse_command() {
        nl -n rz | sort -nr | cut -f 2-
      } \
        && {
          fixed_history_path="${TMPDIR:-/tmp/bash_uniq_history}"
          cat "${HISTFILE:=${HOME}/.bash_history}" \
            | reverse_command \
            | awk '!x[$0]++' \
            | reverse_command > "$fixed_history_path" \
            && {
              cat "$fixed_history_path" > "$HISTFILE"
              rm "$fixed_history_path"
            }
        }
    ) \
    && history -c \
    && history -r
}

if [ -n "$(command -v dpkg)" ] && [ -n "$(command -v apt-cache)" ]; then
  aptleaf() {
    dpkg -l \
      | command grep '^ii' \
      | tr -s ' ' \
      | cut -d ' ' -f 2 \
      | xargs -n5 -P$(nproc) sh -c "$(cat <<'EOF'
for x; do
  if [ -z "$(apt-cache rdepends --installed "$x" | tail -n +3)" ]; then
    echo "$x"
  else
    :
  fi
done
EOF
)" _
  }
fi

if [ -n "$(command -v chezmoi)" ]; then
  cmxps() {
    chezmoi execute-template --init --promptString=$@
  }
  cmspc() {
    (
      source_dir="$(chezmoi source-path)"
      find "${source_dir:?}" -type f ! -path '*/.git/*' \
        | command grep -E "^$source_dir/"'([^/]+/)*(\.chezmoi[.deistv]|(create|modify|remove|run)_[^/]+$)' --color=none
    )
  }

  if [ -n "$(command -v fzf)" ]; then
    cmes() {
      (
        source_dir_prefix="$(chezmoi source-path)/"
        selected="$(cmspc \
          | command grep -v '/\.keep$' \
          | sed -e "s%^$source_dir_prefix%%" \
          | fzf)"
        [ -n "$selected" ] || return
        "${EDITOR:-vi}" "$source_dir_prefix$selected"
      )
    }
  fi
fi

if [ -n "$(command -v bw)" ]; then
  bwli() {
    bw login --raw --method 1 {{ .data.bw.email | squote }}
  }
  bwlo() {
    bw logout
  }
fi

if [ -n "$(command -v docker)" ]; then
  # buildx local cache option
  dkbxlc() {
    (
      cache_dir="${2:-./cache/images/${1?}}"
      echo "--set ${1}.cache-from=type=local,src=${cache_dir} --set ${1}.cache-to=type=local,dest=${cache_dir}"
    )
  }
fi
