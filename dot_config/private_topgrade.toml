# Disable specific steps - same options as the command line flag
disable = [
  "brew_formula",
  "chezmoi",
  "config_update",
  "containers", # Maybe docker has not started
  "flutter",
  "github_cli_extensions",
  "git_repos",
  "go",
  "nix", # topgrade does not support `nix profile`
  "pip3",
  "vim",
]

# Ignore failures for these steps
ignore_failures = ["nix", "containers"]

# Run specific steps - same options as the command line flag
#only = ["system", "emacs"]

# Cleanup temporary or old files
#cleanup = true

[git]
# Additional git repositories to pull
#repos = [
#  "~/src/*/",
#  "~/.config/something"
#]

# Don't pull the predefined git repos
#pull_predefined = false

# Arguments to pass Git when pulling Repositories
#arguments = "--rebase --autostash"

[composer]
#self_update = true

# Commands to run before anything
[pre_commands]
#"Emacs Snapshot" = "rm -rf ~/.emacs.d/elpa.bak && cp -rl ~/.emacs.d/elpa ~/.emacs.d/elpa.bak"

# Custom commands
[commands]
#"Python Environment" = "~/dev/.env/bin/pip install -i https://pypi.python.org/simple -U --upgrade-strategy eager jupyter"

[brew]
#greedy_cask = true

[linux]

[windows]
# Manually select Windows updates
#accept_all_updates = false
#open_remotes_in_new_terminal = true

# Causes Topgrade to rename itself during the run to allow package managers
# to upgrade it. Use this only if you installed Topgrade by using a package
# manager such as Scoop to Cargo
#self_rename = true

[npm]

[firmware]
# Offer to update firmware; if false just check for and display available updates
#upgrade = true

[flatpak]
# Use sudo for updating the system-wide installation
#use_sudo = true
