let s:dein_dir = g:local_data_dir . '/dein'
let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'
if !isdirectory(s:dein_repo_dir)
  execute '!git clone --depth 1 https://github.com/Shougo/dein.vim ' . s:dein_repo_dir
endif
let &runtimepath = s:dein_repo_dir . ',' . &runtimepath

if !dein#load_state(s:dein_dir)
  finish
endif

" let g:dein#auto_recache = 1
let g:dein#install_max_processes = 16
let g:dein#install_message_type = 'none'
let g:dein#types#git#clone_depth = 1
" let g:dein#types#git#pull_command = 'pull --ff --ff-only --update-shallow'
let g:dein#install_github_api_token = '{{ .vim.dein_token }}'

" Update when this file is changed
call dein#begin(s:dein_dir, expand('<sfile>'))

let s:dein_config_dir = g:vim_config_dir . '/dein'

{{- if true }}
{{/* chezmoi plugin context */}}
{{-   $chezmoi_plugin_name := "'alker0/chezmoi.vim'" }}
{{-   $chezmoi_after_comma := " " }}
{{-   $chezmoi_option_list := list "lazy: 0" }}
{{-   $chezmoi_load_options := dict "lazy" "0" }}
{{-   $chezmoi_hook_add_list := list }}
{{-   $chezmoi_source_path := "" }}

{{-   with index .vim "chezmoi_plugin_path" }}
{{-     $chezmoi_after_comma = "\n  \\   " }}
{{-     $_ := set $chezmoi_load_options "frozen" "1" }}
{{-     $chezmoi_plugin_name = expandenv . | squote }}
{{-   end }}

{{-   with index .vim "chezmoi_plugin_options" }}
{{-     range $key,$option_value_raw := . }}
{{-       if not ($key | kindIs "string") }}
{{-         break }}
{{-       end }}

{{-       if not $key }}
{{-         continue }}
{{-       end }}

{{-       $chezmoi_after_comma = "\n  \\   " }}

{{-       $option_value_fixed := $option_value_raw }}
{{-       if $option_value_raw | kindIs "string" }}
{{-         if eq $key "source_dir_path" }}
{{-           $option_value_fixed = expandenv $option_value_raw | quote }}
{{-         else }}
{{-           $option_value_fixed = $option_value_raw | quote }}
{{-         end }}
{{-       else if $option_value_raw | kindIs "bool" }}
{{-         $option_value_fixed = printf "v:%s" ($option_value_raw | toString) }}
{{-       end }}

{{-       $chezmoi_hook_add_list = append $chezmoi_hook_add_list (
            printf "let g:chezmoi#%s = %s" $key $option_value_fixed
          )
}}
{{-     end }}
{{-   end }}

{{-   with $chezmoi_hook_add_list | join " | " }}
{{-     $_ := set $chezmoi_load_options "hook_add" (. | squote) }}
{{-   end }}
call dein#add({{ $chezmoi_plugin_name }}, #{
{{-   $chezmoi_option_not_first := false }}
{{-   range $key,$chezmoi_option := $chezmoi_load_options }}
{{-     if $chezmoi_option }}
{{-       if $chezmoi_option_not_first }},{{ else }}{{ $chezmoi_option_not_first = true }}{{ end }}
{{-       $chezmoi_after_comma }}{{ printf "%s: %s" $key $chezmoi_option }}
{{-     end }}
{{-   end }}

{{-   range $index,$chezmoi_option := list }}
{{-     if $chezmoi_option }}
{{-       if gt $index 0 }},{{ end }}
{{-       $chezmoi_after_comma }}{{ $chezmoi_option }}
{{-     end }}
{{-   end }}
{{- " " -}}
})
{{- end }}
call dein#load_toml(s:dein_config_dir . '/eager.toml', #{lazy: 0})
call dein#load_toml(s:dein_config_dir . '/lazy.toml', #{lazy: 1})

call dein#end()
call dein#save_state()

if has('vim_starting') && dein#check_install()
  call dein#install()
  " call map(dein#check_clean(), "delete(v:val), 'rf')")
endif
