eval "$( ({
  echo ds 'du -sh'

  history_append='history -a'
  if [ -n "$(command -v powershell)" ] ; then
    echo pwsh 'powershell'

    powershell_command='powershell -Command'
    echo pwshx "$powershell_command"
    echo poff "$history_append && $powershell_command Stop-Computer"
    echo rbt "$history_append && $powershell_command Restart-Computer"

  else
    shutdown_path='/mnt/c/Windows/System32/shutdown.exe'
    [ -x $shutdown_path ] && {
      echo poff "$history_append && $shutdown_path -s -t 0"
      echo rbt "$history_append && $shutdown_path -r -t 0"
    }
  fi

  [ -n "$(command -v docker)" ] && {
    echo dkr 'docker'
    echo dkli 'docker image ls'
    echo dklc 'docker container ls'
    echo dki 'docker image'
    echo dkc 'docker container'
  }

  [ -n "$(command -v chezmoi)" ] && {
    echo cz 'chezmoi'
    echo czad 'chezmoi add'
    echo czadt 'chezmoi add --template'
    echo czadat 'chezmoi add --autotemplate'
    echo czap 'chezmoi apply'
    echo czdf 'chezmoi diff'
    echo czdt 'chezmoi data'
    echo cze 'chezmoi edit'
    echo czec 'chezmoi edit-config'
    echo czfg 'chezmoi forget'
    echo czm 'chezmoi managed'
    echo czunm 'chezmoi unmanaged'
    echo czsp 'chezmoi source-path'
    echo czupd 'chezmoi update'
    echo czupg 'chezmoi upgrade'
    echo czcd 'cd `chezmoi source-path`'
    echo czxt 'chezmoi execute-template'
  }

}) | sed -E "s/^([_[:alnum:]]+) /alias \1='/;s/$/'/"
)"


fenv () {
  (
    if [ -f "${FENV_EXCLUDES_PATH:=${HOME}/.config/fenv/fenv-excludes}" ] ; then
      fenv_excludes=$(cat < ${FENV_EXCLUDES_PATH} | tr -s '\n' | tr '\n' '|')

      fenv_sed_pattern=$(cat <<EOP | tr -d '\n'
      /[:]{2}|[CD]:[\\]|[CD]:$/b;
      s/=([^:]+):/=*\n--------\1\n--------/;
      s/:/\n--------/g
EOP
      )

      env | grep -E -v "^(${fenv_excludes})=" | sort | sed -r "${fenv_sed_pattern}"
    else
      echo "${FENV_EXCLUDES_PATH} is missing or invalid"
      return 1
    fi
  )
}

unqh () {
  # inspect -> type unqh
  # delete -> unset -f unqh
  # list -> set | less
  history -a &&
  (
    reverse_command () {
      nl -n rz | sort -nr | cut -f 2-
    } &&
    cat ${HISTFILE:=${HOME}/.bash_history} |
    reverse_command |
    awk '!x[$0]++' |
    reverse_command > /tmp/history &&
    cat /tmp/history > $HISTFILE
  ) &&
  history -c &&
  history -r
}

[ -n "$(command -v chezmoi)" ] && {
  czxps () {
    chezmoi execute-template --init --promptString=$@
  }
}

