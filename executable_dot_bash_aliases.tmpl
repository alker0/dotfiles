{{ template "aliases/aliases" "bash" }}

fenv() {
  (
    if [ -f "${FENV_EXCLUDES_PATH:=${XDG_CONIFG_HOME:-$HOME/.config}/fenv/fenv-excludes}" ]; then
      fenv_excludes="$(cat < "${FENV_EXCLUDES_PATH}" | tr -s '\n' | tr '\n' '|')"

      fenv_sed_pattern="$(cat <<EOP
      /[:]{2}|[CD]:[\\]|[CD]:$/b
      s/=([^:]+):/=*\n--------\1\n--------/
      s/:/\n--------/g
EOP
      )"

      env \
        | grep -E -v "^(${fenv_excludes})=" \
        | sort \
        | sed -r "${fenv_sed_pattern}"
    else
      echo "${FENV_EXCLUDES_PATH} is missing or invalid"
      return 1
    fi
  )
}

unqh() {
  # inspect -> type unqh
  # delete -> unset -f unqh
  # list -> set | less
  history -a \
    && (
      reverse_command() {
        nl -n rz | sort -nr | cut -f 2-
      } \
      && cat "${HISTFILE:=${HOME}/.bash_history}" \
        | reverse_command \
        | awk '!x[$0]++' \
        | reverse_command > /tmp/history \
        && cat /tmp/history > "$HISTFILE"
    ) \
    && history -c \
    && history -r
}

if [ -n "$(command -v chezmoi)" ]; then
  czxps() {
    chezmoi execute-template --init --promptString=$@
  }
fi

if [ -n "$(command -v docker)" ]; then
  # buildx local cache option
  dkbxlc() {
    (
      cache_dir="${2:-./cache/images/${1?}}"
      echo "--set ${1}.cache-from=type=local,src=${cache_dir} --set ${1}.cache-to=type=local,dest=${cache_dir}"
    )
  }
fi

{{ .additional.aliases -}}

